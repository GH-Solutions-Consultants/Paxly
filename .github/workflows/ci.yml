name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.20.8]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - name: Enable Go Modules
      run: go env -w GO111MODULE=on

    - name: Install Dependencies
      run: go mod tidy

    - name: Setup Golangci-lint Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/golangci-lint
        key: golangci-lint-${{ runner.os }}-${{ hashFiles('.golangci.yml') }}
        restore-keys: |
          golangci-lint-${{ runner.os }}-

    - name: Install Golangci-lint
      run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.47.0

    - name: Run Linter
      run: golangci-lint run

    - name: Run Tests
      run: go test ./... -v

    - name: Build
      run: go build -o paxly

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.out
